#!/usr/bin/env python3
# Script Name: Signature-based Malware Detection Part 2 of 3
# Description: Continue developing your Python malware detection tool.
# Author: Israel Quirola
# Date: February 20, 2024
# This script will prompt the user for the file name and directory to search in, then search each file in the directory by name, printing out the file name and location for each positive detection. It also logs the search results into a file named 'search.log'. The script works on both Ubuntu Linux 20.04 Focal Fossa and Windows 10.

# Import:
import os
import platform
import logging

# Setup logging
logging.basicConfig(filename='search.log', level=logging.INFO, format='%(asctime)s - %(levelname)s - %(message)s')

def search_file(file_name, directory):
    hits = 0
    searched_files = 0

    # Iterate over each file in the directory
    for root, dirs, files in os.walk(directory):
        for file in files:
            if file == file_name:
                hits += 1
                file_path = os.path.join(root, file)
                print(f"Found: {file_name} at location: {file_path}")
                logging.info(f"Found: {file_name} at location: {file_path}")
            searched_files += 1

    print(f"Total files searched: {searched_files}")
    print(f"Total hits found: {hits}")
    logging.info(f"Total files searched: {searched_files}")
    logging.info(f"Total hits found: {hits}")

def main():
    # Prompt user for file name and directory
    file_name = input("Enter the file name to search for: ")
    directory = input("Enter the directory to search in: ")

    # Validate directory path
    if not os.path.isdir(directory):
        print("Invalid directory path.")
        logging.error("Invalid directory path entered.")
        return

    # Search file in the directory
    search_file(file_name, directory)

if __name__ == "__main__":
    main()